// so first of all we find the sum of the numbers in an array after that we see wheather that given number id divisible by K or not after that we find that is the number whose rem is 0 with k is 
is 0 with k is continuous subarray with size 2 0r not.
public boolean checkSubarraySum(int[] nums, int k) {
        Map<Integer,Integer> hm = new HashMap<>();
        int sum =0;
        hm.put(0,-1);
        for(int i=0;i<nums.length;i++){
            sum += nums[i];
            int rem = sum%k;
            if(i-hm.getOrDefault(rem,i) >= 2) return true;
            hm.putIfAbsent(rem,i);
        }
        return false;
        
    }
}
